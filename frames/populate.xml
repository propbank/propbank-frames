<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE frameset PUBLIC "-//PB//PropBank Frame v3.4 Transitional//EN" "http://propbank.org/specification/dtds/v3.4/frameset.dtd">
<frameset>
  <predicate lemma="populate">
    <roleset id="populate.01" name="provide inhabitants for, fill with inhabitants">
      <aliases>
        <alias pos="n">population</alias>
        <alias pos="v">populate</alias>
      </aliases>
      <roles>
        <role descr="provider" f="PAG" n="0"/>
        <role descr="area" f="PPT" n="1"/>
        <role descr="population" f="COM" n="2"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="1.0" inuse="+"/>
        <usage resource="PropBank" version="2.1.5" inuse="+"/>
        <usage resource="PropBank" version="3.1" inuse="+"/>
        <usage resource="PropBank" version="3.4" inuse="+"/>
        <usage resource="AMR" version="2019" inuse="+"/>
        <usage resource="PropBank" version="Flickr 1.0" inuse="+"/>
        <usage resource="AMR" version="Spatial 1.0" inuse="+"/>
        <usage resource="AMR" version="THYME 1.0" inuse="+"/>
        <usage resource="PropBank" version="3.5" inuse="+"/>
        <usage resource="AMR" version="iSAT 1.0" inuse="+"/>
      </usagenotes>
      <lexlinks>
        <lexlink class="Colonization" confidence="0.8" resource="FrameNet" src="manual+strict-conv" version="1.7"/>
        <lexlink class="Transportperson" confidence="0.1" resource="ERE" src="reo-expansion" version="rich"/>
        <lexlink class="population-n.2" confidence="0.1" resource="onsense" src="annot-overlap" version="on5">3</lexlink>
        <lexlink class="populate-v.1" confidence="0.1" resource="onsense" src="annot-overlap" version="on5">7</lexlink>
        <lexlink class="population-n.1" confidence="0.1" resource="onsense" src="annot-overlap" version="on5">3</lexlink>
      </lexlinks>
      <example name="area and population" src="">
        <text>With more than 15 million exercise bikes sold in the past five years , he adds , `` a lot of garages , basements and attics must be populated with them . ''</text>
        <propbank>
          <rel relloc="28">populated</rel>
          <arg type="ARGM-ADV" start="0" end="12">With more than 15 million exercise bikes sold in the past five years</arg>
          <arg type="ARGM-MOD" start="26" end="26">must</arg>
          <arg type="ARG1" start="18" end="25">a lot of garages , basements and attics</arg>
          <arg type="ARG2" start="29" end="30">with them</arg>
        </propbank>
      </example>
      <example name="agent and area" src="">
        <text>Las Colinas , once a huge Texas ranch , is a sprawling complex of office buildings , homes and recreational facilities that its developers have been struggling to populate in recent years .</text>
        <propbank>
          <rel relloc="28">populate</rel>
          <arg type="ARG0" start="22" end="23">its developers</arg>
          <arg type="ARG1" start="10" end="12">a sprawling complex</arg>
          <arg type="R-ARG1" start="21" end="21">that</arg>
        </propbank>
      </example>
      <example name="population as subject" src="">
        <text>There are moments in this `` Summerfolk '' when the characters populating the vast multilevel country house ( which looks like a parody of Frank Lloyd Wright and is designed by Victoria Petrovich ) spout philosophic bon mots with the self - conscious rat - a - tat - tat pacing of `` Laugh In . ''</text>
        <propbank>
          <rel relloc="11">populating</rel>
          <arg type="ARG2" start="9" end="10">the characters</arg>
          <arg type="ARG1" start="12" end="33">the vast multilevel country house ( which looks like a parody of Frank Lloyd Wright and is designed by Victoria Petrovich )</arg>
        </propbank>
      </example>
      <example name="Arg1, Arg2" src="">
        <text>The yuppies ' population of the previously predominantly immigrant neighborhood angered native residents .</text>
        <propbank>
          <rel relloc="3">population</rel>
          <arg type="ARG2" start="0" end="2">The yuppies '</arg>
          <arg type="ARG1" start="4" end="9">of the previously predominantly immigrant neighborhood</arg>
        </propbank>
      </example>
      <note>POPULATE-V NOTES: This is based on 'fill' and it is crucial to distinguish between theagent causing some area to have a population, and the populationitself. (from populate.01-v)</note>
      <note>POPULATION-N NOTES: ~populate.01 (from population.01-n)</note>
      <note>The rel cannot be its own argument. If the rel is your Arg2 here, it is not eventive. (from population.01-n)</note>
    </roleset>
  </predicate>
</frameset>
