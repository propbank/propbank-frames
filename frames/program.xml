<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE frameset PUBLIC "-//PB//PropBank Frame v3.4 Transitional//EN" "http://propbank.org/specification/dtds/v3.4/frameset.dtd">
<frameset>
  <predicate lemma="program">
    <roleset id="program.01" name="to design a program">
      <aliases>
        <alias pos="n">programming</alias>
        <alias pos="v">program</alias>
        <alias pos="v">programme</alias>
      </aliases>
      <roles>
        <role descr="programmer, agent" f="PAG" n="0"/>
        <role descr="entity  programmed" f="PPT" n="1"/>
        <role descr="attribute" f="PRD" n="2"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="1.0" inuse="+"/>
        <usage resource="PropBank" version="2.1.5" inuse="+"/>
        <usage resource="PropBank" version="3.1" inuse="+"/>
        <usage resource="PropBank" version="3.4" inuse="+"/>
        <usage resource="AMR" version="2019" inuse="+"/>
        <usage resource="PropBank" version="Flickr 1.0" inuse="+"/>
        <usage resource="AMR" version="Spatial 1.0" inuse="+"/>
        <usage resource="AMR" version="THYME 1.0" inuse="+"/>
        <usage resource="PropBank" version="3.5" inuse="+"/>
        <usage resource="AMR" version="iSAT 1.0" inuse="+"/>
      </usagenotes>
      <lexlinks>
        <lexlink class="programme-n.5" confidence="0.1" resource="onsense" src="annot-overlap" version="on5">36</lexlink>
        <lexlink class="program-v.4" confidence="0.1" resource="onsense" src="annot-overlap" version="on5">4</lexlink>
      </lexlinks>
      <example name="program-v: with Arg2" src="">
        <text>Larry Biehl , a money manager in San Mateo , Calif. , blames that on the advent of program trading , in which computers used by big institutional investors are programmed to buy and sell big blocks when certain market conditions prevail .</text>
        <propbank>
          <rel relloc="30">programmed</rel>
          <arg type="ARG1" start="23" end="28">computers used by big institutional investors</arg>
          <arg type="ARG2" start="31" end="41">to buy and sell big blocks when certain market conditions prevail</arg>
        </propbank>
      </example>
      <example name="program-v: transitive" src="">
        <text>`` You 'll start to see shows where viewers program the program .</text>
        <propbank>
          <rel relloc="9">program</rel>
          <arg type="ARG0" start="8" end="8">viewers</arg>
          <arg type="ARG1" start="10" end="11">the program</arg>
          <arg type="ARGM-LOC" start="6" end="6">shows</arg>
          <arg type="R-ARGM-LOC" start="7" end="7">where</arg>
        </propbank>
      </example>
      <example name="programming-n: typical" src="">
        <text>programming of the application</text>
        <propbank>
          <rel relloc="0">programming</rel>
          <arg type="ARG1" start="1" end="3">of the application</arg>
        </propbank>
      </example>
      <example name="programming-n: non-computer use" src="coastal journal">
        <text>We 're impressed with his programming of the Town History series .</text>
        <propbank>
          <rel relloc="5">programming</rel>
          <arg type="ARG0" start="4" end="4">his</arg>
          <arg type="ARG1" start="6" end="10">of the Town History series</arg>
        </propbank>
      </example>
      <note>PROGRAM-V NOTES: Frames file for 'program' based on survey of sentences in the WSJ corpus. (from program.01-v predicate notes)</note>
      <note>PROGRAMMING-N NOTES: Based on Thyme and Sharp data. Comparison to program.01. No VN or FN classes. Framed by Katie. (from programming.01-n)</note>
    </roleset>
  </predicate>
</frameset>
